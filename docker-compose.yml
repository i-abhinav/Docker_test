# version: "3"
        
# services:  
#     # nginx
#     nginx:
#         container_name: ${APP_NAME}_nginx
#         build: ./docker-assets/nginx
#         volumes:
#             - ./:/var/www/myorder
#             - ./docker-assets/nginx/conf.d:/etc/nginx/conf.d
#         links:
#             - php-fpm
#         ports:
#             - 8080:8080
#         working_dir: /var/www/myorder
       
#     # php
#     php-fpm:
#         container_name: ${APP_NAME}_php-fpm
#         build: ./docker-assets/php
#         links:
#             - mysql
#         volumes:
#             - ./:/var/www/myorder
#         depends_on:
#             - mysql
#         working_dir: /var/www/myorder
        
#     # database
#     mysql:
#         container_name: ${APP_NAME}_mysql
#         image: mysql
#         volumes: 
#             - ./database:/var/lib/mysql
#         ports:
#             - 3306:3306
#         command: --default-authentication-plugin=mysql_native_password
#         restart: always
#         environment:
#             MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#             MYSQL_DATABASE: ${DB_DATABASE}
#             MYSQL_USER: ${DB_USERNAME}
#             MYSQL_PASSWORD: ${DB_PASSWORD}




# version: '3.5'

# services:
#   myorders_app:
#     build:
#       context: ./docker-assets-new/apache
#       args:
#         uid: ${UID}
#     container_name: ${APP_NAME}_app
#     environment:
#       - APACHE_RUN_USER=#${UID}
#       - APACHE_RUN_GROUP=#${UID}
#     volumes:
#       - .:/var/www/html
#     ports:
#       - 8080:80
#     networks:
#       backend:
#         aliases:
#           - ${APP_NAME}_app

#   mysql-db:
#     image: mysql
#     container_name: ${APP_NAME}_mysql_db
#     volumes:
#       - ./run/var:/var/lib/mysql
#     ports:
#       - 3306:3306
#     dns_search: mysql
#     restart: always
#     environment:
#         MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#         MYSQL_DATABASE: ${DB_DATABASE}
#         MYSQL_USER: ${DB_USERNAME}
#         MYSQL_PASSWORD: ${DB_PASSWORD}
#     networks:
#       backend:
#         aliases:
#           - db

# networks:
#   backend:
#     name: backend-network

#     #Volumes
# volumes:
#   dbdata:
#     driver: local











# ./docker-compose.yml

# version: '3'

# services:
#   db:
#     image: mysql:5.7
#     container_name: ${APP_NAME}_mysql
#     environment:
#         MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#         MYSQL_DATABASE: ${DB_DATABASE}
#         MYSQL_USER: ${DB_USERNAME}
#         MYSQL_PASSWORD: ${DB_PASSWORD}
#     ports:
#       - "3306:3306"
#   web:
#     image: php:7.2.2-apache
#     container_name: ${APP_NAME}_php
#     depends_on:
#       - db
#     volumes:
#       - ./:/var/www/html/
#     dns:
#             - 8.8.8.8
#             - 8.8.4.4
#     ports:
#       - "8080:80"
#     stdin_open: true
#     tty: true





version: '3'
services:
    web:
        image: nginx:alpine
        container_name: ${APP_NAME}_server
        volumes:
            - "./docker-assets/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
            # - "./etc/ssl:/etc/ssl"
            - "./:/var/www/html"
            - "./docker-assets/nginx/conf.d/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            # - "3000:443"
        environment:
            - NGINX_HOST=${APP_URL}
        command: /bin/sh -c "envsubst '$$APP_URL' < /docker-assets/nginx/conf.d/default.template.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        # image: nanoninja/php-fpm:latest
        image: php:7.3.9-fpm
        container_name: ${APP_NAME}_php
        restart: always
        volumes:
            # - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./:/var/www/html"
        command: php -S="localhost:8080" -t="/var/www/html/test-docker/public"
    # composer:
    #     image: "composer"
    #     volumes:
    #         - "./:/app"
    #     command: install
    mysqldb:
        image: mysql
        container_name: ${APP_NAME}_mysqldb
        restart: always
        env_file:
            - ".env"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"